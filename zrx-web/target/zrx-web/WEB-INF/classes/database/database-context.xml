<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- RW DataSource -->
	<bean id="rwDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.rw.url}" />
		<property name="username" value="${jdbc.rw.username}" />
		<property name="password" value="${jdbc.rw.password}" />

		<!-- 配置初始化大小、最小、最大 -->
<!-- 		<property name="initialSize" value="${jdbc.rw.initialSize}" /> -->
<!-- 		<property name="minIdle" value="${jdbc.rw.minIdle}" /> -->
<!-- 		<property name="maxActive" value="${jdbc.rw.maxActive}" /> -->
		<!-- 配置获取连接等待超时的时间 -->
<!-- 		<property name="maxWait" value="${jdbc.rw.maxWait}" /> -->
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
<!-- 		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.rw.timeBetweenEvictionRunsMillis}" /> -->
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
<!-- 		<property name="minEvictableIdleTimeMillis" value="${jdbc.rw.minEvictableIdleTimeMillis}" /> -->

<!-- 		<property name="validationQuery" value="SELECT 'x'" /> -->
<!-- 		<property name="testWhileIdle" value="true" /> -->
<!-- 		<property name="testOnBorrow" value="false" /> -->
<!-- 		<property name="testOnReturn" value="false" /> -->

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
<!-- 		<property name="poolPreparedStatements" value="false" /> -->
<!-- 		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

		<!-- 配置监控统计拦截的filters -->
<!-- 		<property name="filters" value="stat" /> -->
	</bean>
	
	<!-- RO DataSource -->
	<bean id="roDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.rw.url}" />
		<property name="username" value="${jdbc.rw.username}" />
		<property name="password" value="${jdbc.rw.password}" />

		<!-- 配置初始化大小、最小、最大 -->
<!-- 		<property name="initialSize" value="${jdbc.ro.initialSize}" /> -->
<!-- 		<property name="minIdle" value="${jdbc.ro.minIdle}" /> -->
<!-- 		<property name="maxActive" value="${jdbc.ro.maxActive}" /> -->
		<!-- 配置获取连接等待超时的时间 -->
<!-- 		<property name="maxWait" value="${jdbc.ro.maxWait}" /> -->
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
<!-- 		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.ro.timeBetweenEvictionRunsMillis}" /> -->
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
<!-- 		<property name="minEvictableIdleTimeMillis" value="${jdbc.ro.minEvictableIdleTimeMillis}" /> -->

<!-- 		<property name="validationQuery" value="SELECT 'x'" /> -->
<!-- 		<property name="testWhileIdle" value="true" /> -->
<!-- 		<property name="testOnBorrow" value="false" /> -->
<!-- 		<property name="testOnReturn" value="false" /> -->

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
<!-- 		<property name="poolPreparedStatements" value="false" /> -->
<!-- 		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

		<!-- 配置监控统计拦截的filters -->
<!-- 		<property name="filters" value="stat" /> -->
	</bean>

	<bean id="dataSource" class="com.zrx.hr.common.datasource.DataSourceSelector">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!-- RW -->
				<entry key="RW" value-ref="rwDataSource" />
				<!-- RO -->
				<entry key="RO" value-ref="rwDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="rwDataSource" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 开启事务的注解方式 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>